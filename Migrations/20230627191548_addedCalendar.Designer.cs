// <auto-generated />
using MegaHotel.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MegaHotel.Migrations
{
    [DbContext(typeof(HotelDbContext))]
    [Migration("20230627191548_addedCalendar")]
    partial class addedCalendar
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MegaHotel.Models.MessageModels.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("MessageText")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("MegaHotel.Models.RoomModels.CalendarRoom", b =>
                {
                    b.Property<int>("IDCalendar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDCalendar"));

                    b.Property<int>("Data")
                        .HasColumnType("int");

                    b.Property<bool>("IsAvaible")
                        .HasColumnType("bit");

                    b.Property<int>("RoomCalendarId")
                        .HasColumnType("int");

                    b.HasKey("IDCalendar");

                    b.HasIndex("IDCalendar")
                        .IsUnique();

                    b.HasIndex("RoomCalendarId");

                    b.ToTable("CalendarRooms");

                    b.HasData(
                        new
                        {
                            IDCalendar = 1,
                            Data = 1,
                            IsAvaible = true,
                            RoomCalendarId = 1
                        },
                        new
                        {
                            IDCalendar = 2,
                            Data = 2,
                            IsAvaible = true,
                            RoomCalendarId = 1
                        },
                        new
                        {
                            IDCalendar = 3,
                            Data = 3,
                            IsAvaible = true,
                            RoomCalendarId = 1
                        });
                });

            modelBuilder.Entity("MegaHotel.Models.RoomModels.CapacityRoom", b =>
                {
                    b.Property<int>("IdCapacity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCapacity"));

                    b.Property<int>("GuestNumber")
                        .HasColumnType("int");

                    b.HasKey("IdCapacity");

                    b.HasIndex("IdCapacity")
                        .IsUnique();

                    b.ToTable("CapacityRooms");

                    b.HasData(
                        new
                        {
                            IdCapacity = 1,
                            GuestNumber = 1
                        },
                        new
                        {
                            IdCapacity = 2,
                            GuestNumber = 2
                        },
                        new
                        {
                            IdCapacity = 3,
                            GuestNumber = 3
                        },
                        new
                        {
                            IdCapacity = 4,
                            GuestNumber = 6
                        });
                });

            modelBuilder.Entity("MegaHotel.Models.RoomModels.Room", b =>
                {
                    b.Property<int>("IDRoom")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDRoom"));

                    b.Property<int>("CapacityRoomId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("RoomNumber")
                        .HasColumnType("int");

                    b.Property<int>("TypeRoomId")
                        .HasColumnType("int");

                    b.HasKey("IDRoom");

                    b.HasIndex("CapacityRoomId");

                    b.HasIndex("IDRoom")
                        .IsUnique();

                    b.HasIndex("TypeRoomId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            IDRoom = 1,
                            CapacityRoomId = 2,
                            Description = "Basic room for two person.",
                            ImageURL = "https://images.unsplash.com/photo-1618773928121-c32242e63f39?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1170&q=80",
                            Price = 49.990000000000002,
                            RoomNumber = 20,
                            TypeRoomId = 1
                        },
                        new
                        {
                            IDRoom = 2,
                            CapacityRoomId = 1,
                            Description = "Basic room for one person.",
                            ImageURL = "https://images.unsplash.com/photo-1611892440504-42a792e24d32?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1170&q=80",
                            Price = 35.990000000000002,
                            RoomNumber = 21,
                            TypeRoomId = 1
                        },
                        new
                        {
                            IDRoom = 3,
                            CapacityRoomId = 3,
                            Description = "Premium room for three person.",
                            ImageURL = "https://images.unsplash.com/photo-1591088398332-8a7791972843?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1074&q=80",
                            Price = 65.989999999999995,
                            RoomNumber = 30,
                            TypeRoomId = 2
                        },
                        new
                        {
                            IDRoom = 4,
                            CapacityRoomId = 3,
                            Description = "premium room for three person.",
                            ImageURL = "https://images.unsplash.com/photo-1590490360182-c33d57733427?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1074&q=80",
                            Price = 65.989999999999995,
                            RoomNumber = 31,
                            TypeRoomId = 2
                        },
                        new
                        {
                            IDRoom = 5,
                            CapacityRoomId = 2,
                            Description = "Lux room for two person.",
                            ImageURL = "https://images.unsplash.com/photo-1562438668-bcf0ca6578f0?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1460&q=80",
                            Price = 99.989999999999995,
                            RoomNumber = 40,
                            TypeRoomId = 3
                        },
                        new
                        {
                            IDRoom = 6,
                            CapacityRoomId = 3,
                            Description = "Lux room for three person.",
                            ImageURL = "https://images.unsplash.com/photo-1578683010236-d716f9a3f461?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1170&q=80",
                            Price = 129.99000000000001,
                            RoomNumber = 41,
                            TypeRoomId = 3
                        },
                        new
                        {
                            IDRoom = 7,
                            CapacityRoomId = 4,
                            Description = "Premium-Lux for 6 person.",
                            ImageURL = "https://plus.unsplash.com/premium_photo-1661876306620-f2f2989f8f8b?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1084&q=80",
                            Price = 249.99000000000001,
                            RoomNumber = 50,
                            TypeRoomId = 4
                        });
                });

            modelBuilder.Entity("MegaHotel.Models.RoomModels.TypeRoom", b =>
                {
                    b.Property<int>("IdType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdType"));

                    b.Property<string>("RoomType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdType");

                    b.HasIndex("IdType")
                        .IsUnique();

                    b.ToTable("TypeRooms");

                    b.HasData(
                        new
                        {
                            IdType = 1,
                            RoomType = "Basic"
                        },
                        new
                        {
                            IdType = 2,
                            RoomType = "Premium"
                        },
                        new
                        {
                            IdType = 3,
                            RoomType = "Lux"
                        },
                        new
                        {
                            IdType = 4,
                            RoomType = "PremiumLux"
                        });
                });

            modelBuilder.Entity("MegaHotel.Models.UserModels.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "capybara@gmail.com",
                            Password = "happyCapy"
                        },
                        new
                        {
                            UserId = 2,
                            Email = "monkey@gmail.com",
                            Password = "happyMonkey"
                        },
                        new
                        {
                            UserId = 3,
                            Email = "rat@gmail.com",
                            Password = "happyRat"
                        });
                });

            modelBuilder.Entity("MegaHotel.Models.RoomModels.CalendarRoom", b =>
                {
                    b.HasOne("MegaHotel.Models.RoomModels.Room", "_RoomCalendar")
                        .WithMany("_CalendarRoom")
                        .HasForeignKey("RoomCalendarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("_RoomCalendar");
                });

            modelBuilder.Entity("MegaHotel.Models.RoomModels.Room", b =>
                {
                    b.HasOne("MegaHotel.Models.RoomModels.CapacityRoom", "_CapacityRoom")
                        .WithMany("_RoomCapacity")
                        .HasForeignKey("CapacityRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MegaHotel.Models.RoomModels.TypeRoom", "_TypeRoom")
                        .WithMany("_RoomType")
                        .HasForeignKey("TypeRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("_CapacityRoom");

                    b.Navigation("_TypeRoom");
                });

            modelBuilder.Entity("MegaHotel.Models.RoomModels.CapacityRoom", b =>
                {
                    b.Navigation("_RoomCapacity");
                });

            modelBuilder.Entity("MegaHotel.Models.RoomModels.Room", b =>
                {
                    b.Navigation("_CalendarRoom");
                });

            modelBuilder.Entity("MegaHotel.Models.RoomModels.TypeRoom", b =>
                {
                    b.Navigation("_RoomType");
                });
#pragma warning restore 612, 618
        }
    }
}
